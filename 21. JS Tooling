1. Webpack
https://viblo.asia/p/nhung-van-de-nham-lan-khi-su-dung-webpack-maGK7WdaKj2

const path = require('path')  //tiện ích đc tích hợp sẵn trong nodejs, trong nodejs ko sử dụng import
const CleanPlugin = require('clean-webpack-plugin')

module.exports = {
  mode: 'development',  //mặc định là prod
  entry: './src/app.js',
  output: {
    filename: 'bundle.js', //đặt tên cho file bundle
    path: path.resolve(__dirname, 'assets', 'scripts'), //đường dẫn lưu bundle.js, __dirname là global biến của nodejs
    publicPath: 'assets/scripts/'   //plugin của webpack cập nhập url bên trong CSS, HTML (file bundle.js)
  },
  devServer: {  //sau khi cài đặt webpack-dev-server
    contentBase: './    //đường dẫn tới root HTML  (index.html)
  },
  devtool: 'inline-source-map',
  plugin: [
    new CleanPlugin.CleanWebpackPlugin
  ]
}


2. Webpack cli và Webpack-dev-server
+ Webpack cli: sử dụng webpack để bundle, phục vụ cho production
"scripts": {
  build: "webpack" //tự động tìm đến file webpack.config.js
}

+ Webpack-dev-server: sử dụng để development server tự động reload khi change something, phục vụ cho development
"scripts": {
  start: "webpack-dev-server" //tạo ra address localhost:8080
}
Khi build:dev nó sẽ giữ chương trình luôn chạy (keeps on running), khi nó đang chạy nó sẽ theo dõi những thay đổi nếu có
và sẽ tự động rebuild lại để cập nhật


3. Debug
devtool: https://webpack.js.org/configuration/devtool/#qualities

devtool: 'inline-source-map'


4. Webpack for prod
Tạo ra 1 file config mới tên webpack.config.prod.js
 Sửa lại "build": "webpack --config webpack.config.prod.js"


5. Thêm clean plugin để loại bỏ những bundle thừa

6. Change name của bunlde
Vì brower thường cache JS và CSS (lưu bản sao) khi user truy cập webpage: nếu file ko change thì user truy cập lần sau nhanh hơn
-> Buộc browser download new version of file bằng cách change file name
-> Webpack sẽ giúp, không phải random name cho file nhưng sẽ xác định unique cho mỗi file cho mỗi lần build
filename: '[contenthash].js'


7. Sử dụng third party package
Sau khi chúng ta install thì nó mới chỉ có ở thư mục, và để sử dụng chúng ta cần import
import * as _ from 'lodash'
-> Ko có đường dẫn tương đối, webpack sẽ hiểu là sẽ tìm package có tên lodash trong thư mục node_modules
