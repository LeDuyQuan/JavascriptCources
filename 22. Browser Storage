A. localStorage, sessionStorage
- Key-value store đơn giản
- Để quản lý tùy chọn người dùng or data đơn giản
- Giao tiếp thông qua Javascript //có thể thông qua developer tools

B. cookies //cũng là 1 nơi lưu trữ simple khác
- Key-value: nhưng có thể config ví dụ expire at some time cho data đó
- Để quản lý tùy chọn người dùng or data đơn giản
- Giao tiếp thông qua Javascript //có thể thông qua developer tools

C. IndexedDB 
- CSDL phía client có thể sử dụng ngôn ngữ truy vấn
- Quản lý phức tạp với table
- Giao tiếp thông qua Javascript

Tất cả data lưu bằng 3 cách này có thể được người dùng xóa dễ dàng bằng 1 cú click

1. localStorage
localStorage.setItem('uid', userId)    //nó là window.localStorage (window là object của trình duyệt, ko phải của JS)
const store = localStorage.getItem('uid') 

- Chỉ lưu string nên nếu là JSON thì
localStorage.setItem('json', JSON.stringify(user))
const store = JSON.parse(localStorage.getItem('json'))


2. sessionStore: cũng lưu trữ như localStore nhưng sẽ bị xóa khi đóng tab


3. Cookie
document.cookie = 'username=Ted Mosby; max-age=9000'  //add entry, ko phải overide
const cookieData = document.cookie.split(';');
const data = cookieData.map(x => x.trim());
const store = data[0].split('=')[1];


4. IndexedDB


5. Support of Browser
Có những tính năng như fetch được nhiều trình duyệt hỗ trợ những cũng có 1 số ko hỗ trợ như IE
Tra cứu tính năng: https://caniuse.com/

+ Vậy để có thể sử dụng những tính năng thiếu xót đó trên IE ta có thể sử dụng third-party: polyfill

+ Để chuyển ngôn ngữ cao về ngôn ngữ thấp ta sử dụng: transpiler code -> babel (để code có thể sử dụng ở nhiều trình duyệt phiên bản cũ)
Khai báo babel trong webpack
Trình duyệt cần được biên dịch: khai báo ở package.json ("browserlist" được sử dụng ngầm bởi @babel/preset-env)
"browserlist": "> 2%, not dead"   //trình duyệt chiếm hơn 2% thị phần, số càng nhỏ thì càng support older browsers. (not dead là những browser còn đc support)
=> điểu này có thể chuyển let, const thành var những promise vẫn chưa được transpiler nên cần kết hợp với polyfill

+ core-js
import core-js, you have access to all the Javascript features of all browsers
Trong webpack: babel-loader
- useBuiltIns: control polyfilling behavior
- usage: Babel will add polyfill entries as it detects it
presets: [
  ['@babel/preset-env', { useBuiltIns: 'usage', corejs: { version: 3 } }]
]
